//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceMedia
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Media", Namespace="http://schemas.datacontract.org/2004/07/WCF", IsReference=true)]
    public partial class Media : object
    {
        
        private System.DateTime CreatedAtField;
        
        private System.Collections.Generic.List<ServiceReferenceMedia.CustomAttributes> CustomAttributesField;
        
        private ServiceReferenceMedia.Event EventField;
        
        private int EventEventIDField;
        
        private ServiceReferenceMedia.Location LocationField;
        
        private int LocationLocationIDField;
        
        private int MediaIDField;
        
        private ServiceReferenceMedia.MediaType MediaTypeField;
        
        private System.DateTime ModifiedAtField;
        
        private string PathField;
        
        private System.Collections.Generic.List<ServiceReferenceMedia.Person> PeopleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt
        {
            get
            {
                return this.CreatedAtField;
            }
            set
            {
                this.CreatedAtField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMedia.CustomAttributes> CustomAttributes
        {
            get
            {
                return this.CustomAttributesField;
            }
            set
            {
                this.CustomAttributesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMedia.Event Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventEventID
        {
            get
            {
                return this.EventEventIDField;
            }
            set
            {
                this.EventEventIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMedia.Location Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationLocationID
        {
            get
            {
                return this.LocationLocationIDField;
            }
            set
            {
                this.LocationLocationIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaID
        {
            get
            {
                return this.MediaIDField;
            }
            set
            {
                this.MediaIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMedia.MediaType MediaType
        {
            get
            {
                return this.MediaTypeField;
            }
            set
            {
                this.MediaTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedAt
        {
            get
            {
                return this.ModifiedAtField;
            }
            set
            {
                this.ModifiedAtField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMedia.Person> People
        {
            get
            {
                return this.PeopleField;
            }
            set
            {
                this.PeopleField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/WCF", IsReference=true)]
    public partial class Event : object
    {
        
        private int EventIDField;
        
        private System.Collections.Generic.List<ServiceReferenceMedia.Media> MediaField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID
        {
            get
            {
                return this.EventIDField;
            }
            set
            {
                this.EventIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMedia.Media> Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/WCF", IsReference=true)]
    public partial class Location : object
    {
        
        private int LocationIDField;
        
        private System.Collections.Generic.List<ServiceReferenceMedia.Media> MediaField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationID
        {
            get
            {
                return this.LocationIDField;
            }
            set
            {
                this.LocationIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMedia.Media> Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomAttributes", Namespace="http://schemas.datacontract.org/2004/07/WCF", IsReference=true)]
    public partial class CustomAttributes : object
    {
        
        private int CustomAttributeIDField;
        
        private string DescriptionField;
        
        private System.Collections.Generic.List<ServiceReferenceMedia.Media> MediaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomAttributeID
        {
            get
            {
                return this.CustomAttributeIDField;
            }
            set
            {
                this.CustomAttributeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMedia.Media> Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaType", Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    public enum MediaType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Photo = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Video = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/WCF", IsReference=true)]
    public partial class Person : object
    {
        
        private System.Collections.Generic.List<ServiceReferenceMedia.Media> MediaField;
        
        private string NameField;
        
        private int PersonIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMedia.Media> Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonID
        {
            get
            {
                return this.PersonIDField;
            }
            set
            {
                this.PersonIDField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMedia.IMediaManager")]
    public interface IMediaManager
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMedia/GetMedia", ReplyAction="http://tempuri.org/InterfaceMedia/GetMediaResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMedia.Media> GetMediaAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMedia/AddMedia", ReplyAction="http://tempuri.org/InterfaceMedia/AddMediaResponse")]
        System.Threading.Tasks.Task<bool> AddMediaAsync(ServiceReferenceMedia.Media media, System.Collections.Generic.List<ServiceReferenceMedia.Person> people, System.Collections.Generic.List<ServiceReferenceMedia.CustomAttributes> customAttributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMedia/UpdateMedia", ReplyAction="http://tempuri.org/InterfaceMedia/UpdateMediaResponse")]
        System.Threading.Tasks.Task<bool> UpdateMediaAsync(ServiceReferenceMedia.Media oldMedia, ServiceReferenceMedia.Media newMedia, System.Collections.Generic.List<ServiceReferenceMedia.Person> people, System.Collections.Generic.List<ServiceReferenceMedia.CustomAttributes> customAttributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMedia/DeleteMedia", ReplyAction="http://tempuri.org/InterfaceMedia/DeleteMediaResponse")]
        System.Threading.Tasks.Task<int> DeleteMediaAsync(ServiceReferenceMedia.Media media);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMedia/SearchInDB", ReplyAction="http://tempuri.org/InterfaceMedia/SearchInDBResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMedia.Media>> SearchInDBAsync(string searchKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceCustomAttributes/AddCustomAttribute", ReplyAction="http://tempuri.org/InterfaceCustomAttributes/AddCustomAttributeResponse")]
        System.Threading.Tasks.Task<bool> AddCustomAttributeAsync(ServiceReferenceMedia.CustomAttributes customAttribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceCustomAttributes/GetAllAttributes", ReplyAction="http://tempuri.org/InterfaceCustomAttributes/GetAllAttributesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetAllAttributesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceCustomAttributes/GetAttributeByDescription", ReplyAction="http://tempuri.org/InterfaceCustomAttributes/GetAttributeByDescriptionResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMedia.CustomAttributes> GetAttributeByDescriptionAsync(string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/AddEvent", ReplyAction="http://tempuri.org/InterfaceEvent/AddEventResponse")]
        System.Threading.Tasks.Task<bool> AddEventAsync(ServiceReferenceMedia.Event mediaEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/GetEventByName", ReplyAction="http://tempuri.org/InterfaceEvent/GetEventByNameResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMedia.Event> GetEventByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/AddLocation", ReplyAction="http://tempuri.org/InterfaceLocation/AddLocationResponse")]
        System.Threading.Tasks.Task<bool> AddLocationAsync(ServiceReferenceMedia.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/GetLocationByName", ReplyAction="http://tempuri.org/InterfaceLocation/GetLocationByNameResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMedia.Location> GetLocationByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/AddPerson", ReplyAction="http://tempuri.org/InterfacePerson/AddPersonResponse")]
        System.Threading.Tasks.Task<bool> AddPersonAsync(ServiceReferenceMedia.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/GetAllPersons", ReplyAction="http://tempuri.org/InterfacePerson/GetAllPersonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetAllPersonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/GetPersonByName", ReplyAction="http://tempuri.org/InterfacePerson/GetPersonByNameResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMedia.Person> GetPersonByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IMediaManagerChannel : ServiceReferenceMedia.IMediaManager, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class MediaManagerClient : System.ServiceModel.ClientBase<ServiceReferenceMedia.IMediaManager>, ServiceReferenceMedia.IMediaManager
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MediaManagerClient() : 
                base(MediaManagerClient.GetDefaultBinding(), MediaManagerClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IMediaManager.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MediaManagerClient(EndpointConfiguration endpointConfiguration) : 
                base(MediaManagerClient.GetBindingForEndpoint(endpointConfiguration), MediaManagerClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MediaManagerClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MediaManagerClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MediaManagerClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MediaManagerClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MediaManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMedia.Media> GetMediaAsync(string path)
        {
            return base.Channel.GetMediaAsync(path);
        }
        
        public System.Threading.Tasks.Task<bool> AddMediaAsync(ServiceReferenceMedia.Media media, System.Collections.Generic.List<ServiceReferenceMedia.Person> people, System.Collections.Generic.List<ServiceReferenceMedia.CustomAttributes> customAttributes)
        {
            return base.Channel.AddMediaAsync(media, people, customAttributes);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateMediaAsync(ServiceReferenceMedia.Media oldMedia, ServiceReferenceMedia.Media newMedia, System.Collections.Generic.List<ServiceReferenceMedia.Person> people, System.Collections.Generic.List<ServiceReferenceMedia.CustomAttributes> customAttributes)
        {
            return base.Channel.UpdateMediaAsync(oldMedia, newMedia, people, customAttributes);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMediaAsync(ServiceReferenceMedia.Media media)
        {
            return base.Channel.DeleteMediaAsync(media);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMedia.Media>> SearchInDBAsync(string searchKey)
        {
            return base.Channel.SearchInDBAsync(searchKey);
        }
        
        public System.Threading.Tasks.Task<bool> AddCustomAttributeAsync(ServiceReferenceMedia.CustomAttributes customAttribute)
        {
            return base.Channel.AddCustomAttributeAsync(customAttribute);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetAllAttributesAsync()
        {
            return base.Channel.GetAllAttributesAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMedia.CustomAttributes> GetAttributeByDescriptionAsync(string description)
        {
            return base.Channel.GetAttributeByDescriptionAsync(description);
        }
        
        public System.Threading.Tasks.Task<bool> AddEventAsync(ServiceReferenceMedia.Event mediaEvent)
        {
            return base.Channel.AddEventAsync(mediaEvent);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMedia.Event> GetEventByNameAsync(string name)
        {
            return base.Channel.GetEventByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task<bool> AddLocationAsync(ServiceReferenceMedia.Location location)
        {
            return base.Channel.AddLocationAsync(location);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMedia.Location> GetLocationByNameAsync(string name)
        {
            return base.Channel.GetLocationByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task<bool> AddPersonAsync(ServiceReferenceMedia.Person person)
        {
            return base.Channel.AddPersonAsync(person);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetAllPersonsAsync()
        {
            return base.Channel.GetAllPersonsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMedia.Person> GetPersonByNameAsync(string name)
        {
            return base.Channel.GetPersonByNameAsync(name);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMediaManager))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMediaManager))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/PC");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MediaManagerClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMediaManager);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MediaManagerClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMediaManager);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IMediaManager,
        }
    }
}
